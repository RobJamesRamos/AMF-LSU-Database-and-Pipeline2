#!/bin/bash

# Script to optimize and launch parallel tree-building script (AMFbuildTree_single.align.sh) 
# All paths are relative to the working directory

#extract top 207/ database seqs

awk "/^>/ {n++} n>207 {exit} {print}" ./aligned_BLAST_otu97plusV15_3.23.21_cut.fasta > ./V15_LSUDB_3.23.21_cut_aligned.fasta

#extract study sequences

grep -A 15 ">OTU" ./aligned_BLAST_otu97plusV15_3.23.21_cut.fasta > ./BLAST_otu97repseqs_clean_aligned.fasta

nSeqsPerSubset=15 # divide the input fasta into subsets with this number of sequences ?
OTU_REPSEQ_FILE="./BLAST_otu97repseqs_clean_aligned.fasta" # representative sequences of filtered 97% OTUs (generated by AMFtrimmedToOTUs.sh)
STATIC_FILE="./V15_LSUDB_3.23.21_cut_aligned.fasta" # reference sequence database

nRepSeqs=`grep -c '>' $OTU_REPSEQ_FILE`  # how many OTU representative sequences are there?
nSubsets=$(($nRepSeqs/$nSeqsPerSubset)) # how many subsets will we need?
# because it automatically rounds down, this gave us the number of FULL subsets. 
# check whether $nRepSeqs divided evenly by $nSeqsPerSubset; if not, add 1 subset
if [ $(($nRepSeqs%$nSeqsPerSubset)) == 0 ]
then
    echo "OTU rep seqs divided evenly into "$nSubsets" subsets of "$nSeqsPerSubset" sequences"
else
    echo "OTU rep seqs divide into "$nSubsets" subsets of "$nSeqsPerSubset" sequences, plus an extra subset of "$(($nRepSeqs%$nSeqsPerSubset))" sequences"
    ((nSubsets=nSubsets+1)) # increase the total number of subsets by 1
fi

echo "Launching RAXML tree building in parallel for "$nSubsets" subsets of OTU sequences..."

sbatch --array=1-$nSubsets AMFbuildTree.sh
